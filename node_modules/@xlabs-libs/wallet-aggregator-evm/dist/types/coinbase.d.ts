import { CoinbaseWalletConnector } from "@wagmi/core/connectors/coinbaseWallet";
import { EVMWallet, EVMWalletConfig, EVMWalletType } from "./evm";
/** Coinbase Wallet SDK Options */
export interface CoinbaseWalletSDKOptions {
    /** Application name */
    appName: string;
    /** @optional Application logo image URL; favicon is used if unspecified */
    appLogoUrl?: string | null;
    /** @optional Use dark theme */
    darkMode?: boolean;
    /** @optional Coinbase Wallet link server URL; for most, leave it unspecified */
    linkAPIUrl?: string;
    /** @optional whether wallet link provider should override the isMetaMask property. */
    overrideIsMetaMask?: boolean;
    /** @optional whether wallet link provider should override the isCoinbaseWallet property. */
    overrideIsCoinbaseWallet?: boolean;
    /** @optional whether coinbase wallet provider should override the isCoinbaseBrowser property. */
    overrideIsCoinbaseBrowser?: boolean;
    /** @optional whether or not onboarding overlay popup should be displayed */
    headlessMode?: boolean;
    /** @optional whether or not to reload dapp automatically after disconnect, defaults to true */
    reloadOnDisconnect?: boolean;
    /** Fallback Ethereum JSON RPC URL */
    jsonRpcUrl?: string;
    /** Fallback Ethereum Chain ID */
    chainId?: number;
}
export interface CoinbaseWalletConfig extends EVMWalletConfig<CoinbaseWalletSDKOptions> {
    /** Coinbase Wallet SDK Options */
    options: CoinbaseWalletSDKOptions;
}
export declare class CoinbaseWallet extends EVMWallet<CoinbaseWalletConnector, CoinbaseWalletSDKOptions> {
    constructor(config: CoinbaseWalletConfig);
    protected createConnector(): CoinbaseWalletConnector;
    getName(): string;
    getUrl(): string;
    getIcon(): string;
    static getWalletType(): EVMWalletType;
}
//# sourceMappingURL=coinbase.d.ts.map