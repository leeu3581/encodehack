import { ITransportLib, SocketTransportOptions } from '@binance/w3w-types';
import { Events } from '@binance/w3w-utils';

declare class SocketTransport extends Events implements ITransportLib {
    private opts;
    private qs;
    private urls;
    private url;
    private socket;
    private nextSocket;
    private queue;
    private subscriptions;
    private retryIndex;
    constructor(opts: SocketTransportOptions);
    set readyState(value: number);
    get readyState(): number;
    set connecting(value: boolean);
    get connecting(): boolean;
    set connected(value: boolean);
    get connected(): boolean;
    set retryFailed(value: boolean);
    get retryFailed(): boolean;
    open(urls: string[]): void;
    close(): void;
    send(message: string, topic?: string, silent?: boolean): void;
    subscribe(topic: string): void;
    private socketCreate;
    private getWsUrl;
    private socketOpen;
    private _socketClose;
    private socketSend;
    private socketReceive;
    private socketError;
    private queueSubscriptions;
    private setToQueue;
    private pushQueue;
}
type DetectWebsocketResult = {
    ttl: number;
    url: string;
};
declare function detectWebSocket(url: string): Promise<DetectWebsocketResult>;

export { DetectWebsocketResult, SocketTransport, detectWebSocket };
