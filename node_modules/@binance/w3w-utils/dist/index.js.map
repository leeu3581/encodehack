{"version":3,"sources":["../src/jsonrpc/constants.ts","../src/jsonrpc/error.ts","../src/jsonrpc/format.ts","../src/jsonrpc/validators.ts","../src/jsonrpc/url.ts","../src/deeplink.ts","../src/constants.ts","../src/misc.ts","../src/encoding/encoding.ts","../src/encoding/convert.ts","../src/crypto/lib.ts","../src/crypto/aes.ts","../src/crypto/pkcs7.ts","../src/crypto/encrypt.ts","../src/storage/browser.ts","../src/events/index.ts","../src/logger/index.ts","../src/metadata/browser.ts","../src/error/provider-error.ts","../src/error/error-code.ts","../src/detect-ua/browser.ts","../src/env.ts","../src/transport.ts"],"names":["PARSE_ERROR","INVALID_REQUEST","METHOD_NOT_FOUND","INVALID_PARAMS","INTERNAL_ERROR","SERVER_ERROR","RESERVED_ERROR_CODES","SERVER_ERROR_CODE_RANGE","STANDARD_ERROR_MAP","DEFAULT_ERROR","isServerErrorCode","code","isReservedErrorCode","isValidErrorCode","getError","type","getErrorByCode","match","e","validateJsonRpcError","response","error","parseConnectionError","url","payloadId","date","extra","uuid","a","b","formatJsonRpcRequest","method","params","id","formatJsonRpcResult","result","formatJsonRpcError","data","formatErrorMessage","isJsonRpcPayload","payload","isJsonRpcResponse","isJsonRpcSuccess","isJsonRpcError","HTTP_REGEX","WS_REGEX","getUrlProtocol","matches","matchRegexProtocol","regex","protocol","isHttpUrl","isWsUrl","isLocalhostUrl","getDeepLink","chainId","base","appId","startPagePath","startPageQuery","deeplink","infuraNetworks","signingMethods","getInfuraRpcUrl","infuraId","rpcUrl","network","safeJsonParse","value","safeJsonStringify","getRpcUrl","rpc","infuraUrl","isNode","normalizeChainId","ENC_HEX","ENC_UTF8","removeHexPrefix","hex","hexToArray","bufferToArray","arrayToHex","arr","prefixed","bufferToHex","arrayToBuffer","buf","addHexPrefix","typedArrayToBuffer","concatArrays","args","arg","utf8ToArray","utf8","utf8ToBuffer","bufferToUtf8","arrayToUtf8","utf8ToHex","convertHexToArrayBuffer","convertArrayBufferToHex","arrBuf","noPrefix","convertBufferToArrayBuffer","convertArrayBufferToBuffer","convertNumberToHex","num","nextChainId","hash","numberOfRounds","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","checkInt","checkInts","arrayish","i","createArray","length","convertToInt32","bytes","coerceArray","copy","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","AES","key","__publicField","rounds","roundKeyCount","KC","tk","index","rconpointer","t","tt","r","c","plaintext","ciphertext","ModeOfOperationCBC","iv","block","j","PADDING","pkcs7","padding","padded","SHA256_NODE_ALGO","aesCbcEncrypt","aesCbc","encryptedBytes","aesCbcDecrypt","hmacSha256Sign","insecureRandomBytes","n","randomBytes","generateKey","_length","verifyHmac","cipherText","hmac","hmacHex","unsigned","chmac","chmacHex","encrypt","providedIv","_key","ivArrayBuffer","ivHex","contentString","content","cipherTextHex","decrypt","buffer","getStorage","rawData","removeStorage","setStorage","EventEmitter","Events","name","listener","logLevels","currentLogLevel","log","isInBrowser","getIcons","links","icons","link","rel","href","absoluteHref","path","finalPath","absoluteUrl","getWindowMetadataOfAny","metaTags","tag","attributes","target","attr","getName","getDescription","getClientMetadata","description","ProviderRpcError","message","CONNECTION_ERR","RPC_ERROR","MISC_ERR","encodeURI","getIsMobile","getIsAndroid","getHref","isAndroid","wc","qs","host","openBinanceDeepLink","isMobile","isInBinance","bnTransport","custom","http"],"mappings":"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GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IACxE,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,GACxE,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IACxE,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IACxE,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GACxE,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GACxE,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,EAClD,EACMC,EAAK,CACT,GAAM,EAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IACxE,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IACxE,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GACxE,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,EAAM,GAAM,IAAM,IACxE,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IACxE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IACxE,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GACxE,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,IAAM,GACxE,IAAM,IAAM,GAAM,EAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,GAAM,IAAM,IACxE,GAAM,GAAM,EAAM,IAAM,IAAM,IAAM,EAAM,EAAM,GAAM,IAAM,IAAM,GAAM,IACxE,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IACxE,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IACxE,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IACxE,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IACxE,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IACxE,GAAM,IAAM,EAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GACxE,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IACxE,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IACxE,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IACxE,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAClD,EAGMC,GAAK,CACT,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,SAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,UAC5D,UAAY,UAAY,UAAY,UAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,UAC5D,WAAY,UAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,EAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,SAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,SAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,UAAY,WAC5D,WAAY,UAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,SAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,UAAY,UAAY,WAAY,WAAY,UAAY,UAC5D,WAAY,WAAY,UAAY,UAAY,UAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,SAAY,WAAY,UAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,SACtC,EACMC,GAAK,CACT,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,SAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,SAAY,WAAY,WAAY,WAC5D,UAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,UAAY,WAAY,UAAY,UAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,UAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,EAAY,UAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,SAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,UAC5D,UAAY,WAAY,WAAY,UAAY,UAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,SAAY,SAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,UAAY,UAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,SACtC,EACMC,GAAK,CACT,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,SAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,UAC5D,SAAY,WAAY,UAAY,WAAY,UAAY,WAC5D,SAAY,WAAY,UAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,UAAY,WAC5D,UAAY,UAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,UAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,EAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,SAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,UAC5D,UAAY,UAAY,WAAY,UAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,UAAY,UAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,SAAY,WAAY,UAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,UAC5D,WAAY,WAAY,WAAY,SACtC,EACMC,GAAK,CACT,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,SAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,UAC5D,SAAY,WAAY,UAAY,WAAY,UAAY,WAC5D,SAAY,WAAY,UAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,UAAY,WAC5D,UAAY,UAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,UAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,EAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,SAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,UAC5D,UAAY,UAAY,WAAY,UAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,UAAY,UAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,SAAY,WAAY,UAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,UAC5D,WAAY,WAAY,WAAY,SACtC,EAGMC,GAAK,CACT,WAAY,WAAY,UAAY,UAAY,WAAY,UAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,SAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,UAAY,UAAY,SAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,UAAY,WAAY,SAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,SAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,EAAY,UAAY,UAC5D,UAAY,WAAY,WAAY,UAAY,WAAY,UAC5D,UAAY,WAAY,WAAY,UAAY,UAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,UAAY,WAC5D,UAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,UAAY,WAAY,UAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,UAAY,UAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,SAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,UAAY,WAC5D,UAAY,WAAY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","sourcesContent":["export const PARSE_ERROR = 'PARSE_ERROR'\nexport const INVALID_REQUEST = 'INVALID_REQUEST'\nexport const METHOD_NOT_FOUND = 'METHOD_NOT_FOUND'\nexport const INVALID_PARAMS = 'INVALID_PARAMS'\nexport const INTERNAL_ERROR = 'INTERNAL_ERROR'\nexport const SERVER_ERROR = 'SERVER_ERROR'\n\nexport const RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603]\nexport const SERVER_ERROR_CODE_RANGE = [-32000, -32099]\n\nexport const STANDARD_ERROR_MAP = {\n  [PARSE_ERROR]: { code: -32700, message: 'Parse error' },\n  [INVALID_REQUEST]: { code: -32600, message: 'Invalid Request' },\n  [METHOD_NOT_FOUND]: { code: -32601, message: 'Method not found' },\n  [INVALID_PARAMS]: { code: -32602, message: 'Invalid params' },\n  [INTERNAL_ERROR]: { code: -32603, message: 'Internal error' },\n  [SERVER_ERROR]: { code: -32000, message: 'Server error' },\n}\n\nexport const DEFAULT_ERROR = SERVER_ERROR\n","import {\n  ErrorResponse,\n  JsonRpcFailure,\n  JsonRpcValidation,\n} from '@binance/w3w-types'\n\nimport {\n  SERVER_ERROR_CODE_RANGE,\n  RESERVED_ERROR_CODES,\n  STANDARD_ERROR_MAP,\n  DEFAULT_ERROR,\n} from './constants'\n\nexport function isServerErrorCode(code: number): boolean {\n  return (\n    code <= SERVER_ERROR_CODE_RANGE[0] && code >= SERVER_ERROR_CODE_RANGE[1]\n  )\n}\n\nexport function isReservedErrorCode(code: number): boolean {\n  return RESERVED_ERROR_CODES.includes(code)\n}\n\nexport function isValidErrorCode(code: number): boolean {\n  return typeof code === 'number'\n}\n\nexport function getError(type: string): ErrorResponse {\n  if (!Object.keys(STANDARD_ERROR_MAP).includes(type)) {\n    return STANDARD_ERROR_MAP[DEFAULT_ERROR]\n  }\n  return STANDARD_ERROR_MAP[type]\n}\n\nexport function getErrorByCode(code: number): ErrorResponse {\n  const match = Object.values(STANDARD_ERROR_MAP).find((e) => e.code === code)\n  if (!match) {\n    return STANDARD_ERROR_MAP[DEFAULT_ERROR]\n  }\n  return match\n}\n\nexport function validateJsonRpcError(\n  response: JsonRpcFailure\n): JsonRpcValidation {\n  if (typeof response.error.code === 'undefined') {\n    return { valid: false, error: 'Missing code for JSON-RPC error' }\n  }\n  if (typeof response.error.message === 'undefined') {\n    return { valid: false, error: 'Missing message for JSON-RPC error' }\n  }\n  if (!isValidErrorCode(response.error.code)) {\n    return {\n      valid: false,\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      error: `Invalid error code type for JSON-RPC: ${response.error.code}`,\n    }\n  }\n  if (isReservedErrorCode(response.error.code)) {\n    const error = getErrorByCode(response.error.code)\n    if (\n      error.message !== STANDARD_ERROR_MAP[DEFAULT_ERROR].message &&\n      response.error.message === error.message\n    ) {\n      return {\n        valid: false,\n        error: `Invalid error code message for JSON-RPC: ${response.error.code}`,\n      }\n    }\n  }\n  return { valid: true }\n}\n\nexport function parseConnectionError(\n  e: Error,\n  url: string,\n  type: string\n): Error {\n  return e.message.includes('getaddrinfo ENOTFOUND') ||\n    e.message.includes('connect ECONNREFUSED')\n    ? new Error(`Unavailable ${type} RPC url at ${url}`)\n    : e\n}\n","import {\n  Any,\n  ErrorResponse,\n  JsonRpcFailure,\n  JsonRpcRequest,\n  JsonRpcSuccess,\n} from '@binance/w3w-types'\n\nimport { INTERNAL_ERROR, SERVER_ERROR } from './constants'\nimport { getError, getErrorByCode, isReservedErrorCode } from './error'\n\nexport function payloadId(): number {\n  const date = Date.now() * Math.pow(10, 3)\n  const extra = Math.floor(Math.random() * Math.pow(10, 3))\n  return date + extra\n}\n\nexport function uuid(): string {\n  const result: string = ((a?: Any, b?: Any) => {\n    for (\n      b = a = '';\n      a++ < 36;\n      b +=\n        (a * 51) & 52\n          ? (a ^ 15 ? 8 ^ (Math.random() * (a ^ 20 ? 16 : 4)) : 4).toString(16)\n          : '-'\n    ) {\n      // empty\n    }\n    return b\n  })()\n  return result\n}\n\nexport function formatJsonRpcRequest<T = any>(\n  method: string,\n  params: T,\n  id?: number\n): JsonRpcRequest<T> {\n  return {\n    id: id || payloadId(),\n    jsonrpc: '2.0',\n    method,\n    params: params || [],\n  } as JsonRpcRequest<T>\n}\n\nexport function formatJsonRpcResult<T = any>(\n  id: number,\n  result: T\n): JsonRpcSuccess<T> {\n  return {\n    id,\n    jsonrpc: '2.0',\n    result,\n  }\n}\n\nexport function formatJsonRpcError(\n  id: number,\n  error?: string | ErrorResponse,\n  data?: string\n): JsonRpcFailure {\n  return {\n    id,\n    jsonrpc: '2.0',\n    error: formatErrorMessage(error, data),\n  }\n}\n\nexport function formatErrorMessage(\n  error?: string | ErrorResponse,\n  data?: string\n): ErrorResponse {\n  if (typeof error === 'undefined') {\n    return getError(INTERNAL_ERROR)\n  }\n  if (typeof error === 'string') {\n    error = {\n      ...getError(SERVER_ERROR),\n      message: error,\n    }\n  }\n  if (typeof data !== 'undefined') {\n    error.data = data\n  }\n  if (isReservedErrorCode(error.code)) {\n    error = getErrorByCode(error.code)\n  }\n  return error\n}\n","import {\n  JsonRpcFailure,\n  JsonRpcPayload,\n  JsonRpcResponse,\n  JsonRpcSuccess,\n} from '@binance/w3w-types'\n\nexport function isJsonRpcPayload(payload: any): payload is JsonRpcPayload {\n  return (\n    typeof payload === 'object' &&\n    'id' in payload &&\n    'jsonrpc' in payload &&\n    payload.jsonrpc === '2.0'\n  )\n}\n\nexport function isJsonRpcResponse<T = any>(\n  payload: JsonRpcPayload\n): payload is JsonRpcResponse<T> {\n  return (\n    isJsonRpcPayload(payload) &&\n    (isJsonRpcSuccess(payload) || isJsonRpcError(payload))\n  )\n}\nexport function isJsonRpcSuccess<T = any>(\n  payload: JsonRpcPayload\n): payload is JsonRpcSuccess<T> {\n  return 'result' in payload\n}\n\nexport function isJsonRpcError(\n  payload: JsonRpcPayload\n): payload is JsonRpcFailure {\n  return 'error' in payload\n}\n","const HTTP_REGEX = '^https?:'\n\nconst WS_REGEX = '^wss?:'\n\nfunction getUrlProtocol(url: string): string | undefined {\n  const matches = url.match(new RegExp(/^\\w+:/, 'gi'))\n  if (!matches || !matches.length) return\n  return matches[0]\n}\n\nfunction matchRegexProtocol(url: string, regex: string): boolean {\n  const protocol = getUrlProtocol(url)\n  if (typeof protocol === 'undefined') return false\n  return new RegExp(regex).test(protocol)\n}\n\nexport function isHttpUrl(url: string): boolean {\n  return matchRegexProtocol(url, HTTP_REGEX)\n}\n\nexport function isWsUrl(url: string): boolean {\n  return matchRegexProtocol(url, WS_REGEX)\n}\n\nexport function isLocalhostUrl(url: string): boolean {\n  return new RegExp('wss?://localhost(:d{2,5})?').test(url)\n}\n","export const getDeepLink = (url: string, chainId = 1) => {\n  const base = 'bnc://app.binance.com/mp/app'\n  const appId = 'yFK5FCqYprrXDiVFbhyRx7'\n\n  const startPagePath = window.btoa('/pages/browser/index')\n  const startPageQuery = window.btoa(`url=${url}&defaultChainId=${chainId}`)\n  const deeplink = `${base}?appId=${appId}&startPagePath=${startPagePath}&startPageQuery=${startPageQuery}`\n  const dp = window.btoa(deeplink)\n  const http = `https://app.binance.com/en/download?_dp=${dp}`\n  return { http, bnc: deeplink }\n}\n","export const infuraNetworks = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan',\n}\n\nexport const signingMethods = [\n  'eth_requestAccounts',\n  'eth_accounts',\n  'eth_chainId',\n  'eth_signTransaction',\n  'eth_sendTransaction',\n  'eth_sign',\n  'personal_sign',\n  'eth_signTypedData',\n  'eth_signTypedData_v1',\n  'eth_signTypedData_v2',\n  'eth_signTypedData_v3',\n  'eth_signTypedData_v4',\n  'wallet_switchEthereumChain',\n  'wallet_watchAsset',\n]\n","import { IRpcConfig } from '@binance/w3w-types'\n\nimport { infuraNetworks } from './constants'\n\nexport function getInfuraRpcUrl(\n  chainId: number,\n  infuraId?: string\n): string | undefined {\n  let rpcUrl: string | undefined\n  const network = infuraNetworks[chainId]\n  if (typeof network == 'string') {\n    rpcUrl = `https://${network}.infura.io/v3/${infuraId}`\n  }\n  return rpcUrl\n}\n\nexport function safeJsonParse<T = any>(value: string): T | string {\n  if (typeof value !== 'string') {\n    throw new Error(`Cannot safe json parse value of type ${typeof value}`)\n  }\n  try {\n    return JSON.parse(value)\n  } catch {\n    return value\n  }\n}\n\nexport function safeJsonStringify(value: any): string {\n  return typeof value === 'string' ? value : JSON.stringify(value)\n}\n\nexport function getRpcUrl(\n  chainId: number,\n  rpc: IRpcConfig\n): string | undefined {\n  let rpcUrl: string | undefined\n  const infuraUrl = getInfuraRpcUrl(chainId, rpc.infuraId)\n  if (rpc.custom && rpc.custom[chainId]) {\n    rpcUrl = rpc.custom[chainId]\n  } else if (infuraUrl) {\n    rpcUrl = infuraUrl\n  }\n  return rpcUrl\n}\n\nexport function isNode() {\n  return (\n    typeof process !== 'undefined' &&\n    typeof process.versions !== 'undefined' &&\n    typeof process.versions.node !== 'undefined'\n  )\n}\n\nexport function normalizeChainId(chainId: string | number | bigint) {\n  if (typeof chainId === 'string')\n    return Number.parseInt(\n      chainId,\n      chainId.trim().substring(0, 2) === '0x' ? 16 : 10\n    )\n  if (typeof chainId === 'bigint') return Number(chainId)\n  return chainId\n}\n","// -- Constants ------------------------------------------ //\nconst ENC_HEX = 'hex'\nconst ENC_UTF8 = 'utf8'\n\nexport function removeHexPrefix(hex: string): string {\n  return hex.replace(/^0x/, '')\n}\n\nexport function hexToArray(hex: string): Uint8Array {\n  return bufferToArray(Buffer.from(removeHexPrefix(hex), ENC_HEX))\n}\n\nexport function arrayToHex(arr: Uint8Array, prefixed = false): string {\n  return bufferToHex(arrayToBuffer(arr), prefixed)\n}\n\n// -- Uint8Array ----------------------------------------- //\n\nexport function bufferToArray(buf: Buffer): Uint8Array {\n  return new Uint8Array(buf)\n}\n\nexport function bufferToHex(buf: Buffer, prefixed = false): string {\n  const hex = buf.toString(ENC_HEX)\n  return prefixed ? addHexPrefix(hex) : hex\n}\n\nexport function typedArrayToBuffer(arr: Uint8Array) {\n  return ArrayBuffer.isView(arr)\n    ? Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength)\n    : Buffer.from(arr)\n}\n\nexport function arrayToBuffer(arr: Uint8Array): Buffer {\n  return typedArrayToBuffer(arr)\n}\n\nexport function addHexPrefix(hex: string): string {\n  return hex.startsWith('0x') ? hex : `0x${hex}`\n}\n\nexport function concatArrays(...args: Uint8Array[]): Uint8Array {\n  let result: number[] = []\n  args.forEach((arg) => (result = result.concat(Array.from(arg))))\n  return new Uint8Array([...result])\n}\n\nexport function utf8ToArray(utf8: string): Uint8Array {\n  return bufferToArray(Buffer.from(utf8, ENC_UTF8))\n}\nexport function utf8ToBuffer(utf8: string): Buffer {\n  return Buffer.from(utf8, ENC_UTF8)\n}\n\nexport function bufferToUtf8(buf: Buffer): string {\n  return buf.toString(ENC_UTF8)\n}\n\nexport function arrayToUtf8(arr: Uint8Array): string {\n  return bufferToUtf8(arrayToBuffer(arr))\n}\n\nexport function utf8ToHex(utf8: string, prefixed = false): string {\n  return bufferToHex(utf8ToBuffer(utf8), prefixed)\n}\n","import {\n  hexToArray,\n  arrayToHex,\n  bufferToArray,\n  arrayToBuffer,\n} from './encoding'\n\nexport function convertHexToArrayBuffer(hex: string): ArrayBuffer {\n  return hexToArray(hex).buffer\n}\n\nexport function convertArrayBufferToHex(\n  arrBuf: ArrayBuffer,\n  noPrefix?: boolean\n): string {\n  return arrayToHex(new Uint8Array(arrBuf), !noPrefix)\n}\n\nexport function convertBufferToArrayBuffer(buf: Buffer): ArrayBuffer {\n  return bufferToArray(buf).buffer\n}\n\nexport function convertArrayBufferToBuffer(arrBuf: ArrayBuffer): Buffer {\n  return arrayToBuffer(new Uint8Array(arrBuf))\n}\n\nexport function convertNumberToHex(num: number | string): string {\n  let nextChainId = '0x0'\n  if (typeof num === 'number') {\n    nextChainId = `0x${num.toString(16)}`\n  }\n  if (typeof num === 'string') {\n    if (num.startsWith('0x')) {\n      nextChainId = num\n    } else {\n      nextChainId = '0x0'\n    }\n  }\n\n  return nextChainId\n}\n","import { Any } from '@binance/w3w-types'\nimport * as hash from 'hash.js'\n\nimport { bufferToArray, hexToArray, arrayToBuffer } from '../encoding'\n\nimport { ModeOfOperationCBC } from './aes'\nimport { pkcs7 } from './pkcs7'\n\nconst SHA256_NODE_ALGO = 'sha256'\n\nexport function aesCbcEncrypt(\n  iv: Uint8Array,\n  key: Uint8Array,\n  data: Uint8Array\n): Uint8Array {\n  const aesCbc = new ModeOfOperationCBC(key, iv)\n  const padded = pkcs7.pad(data)\n  const encryptedBytes = aesCbc.encrypt(padded)\n\n  return new Uint8Array(encryptedBytes)\n}\n\nexport function aesCbcDecrypt(\n  iv: Uint8Array,\n  key: Uint8Array,\n  data: Uint8Array\n): Uint8Array {\n  const aesCbc = new ModeOfOperationCBC(key, iv)\n  const encryptedBytes = aesCbc.decrypt(data)\n  const padded = new Uint8Array(encryptedBytes)\n  const result = pkcs7.unpad(padded)\n  return result\n}\n\nexport function hmacSha256Sign(key: Uint8Array, data: Uint8Array): Uint8Array {\n  const result = hash\n    .hmac((hash as Any)[SHA256_NODE_ALGO], key)\n    .update(data)\n    .digest('hex')\n\n  return hexToArray(result)\n}\n\nfunction insecureRandomBytes(e: number): Buffer {\n  // eslint-disable-next-line no-var\n  for (var t = new Uint8Array(e), n = 0; n < e; ++n) {\n    t[n] = Math.floor(256 * Math.random())\n  }\n  return arrayToBuffer(t)\n}\n\nexport function randomBytes(length: number): Uint8Array {\n  const buf = insecureRandomBytes(length)\n  return bufferToArray(buf)\n}\n","const numberOfRounds = { 16: 10, 24: 12, 32: 14 }\n\nconst rcon = [\n  0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab,\n  0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,\n  0xfa, 0xef, 0xc5, 0x91,\n]\n\nconst S = [\n  0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe,\n  0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4,\n  0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7,\n  0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3,\n  0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09,\n  0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3,\n  0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe,\n  0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85,\n  0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92,\n  0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c,\n  0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19,\n  0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14,\n  0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2,\n  0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5,\n  0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25,\n  0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,\n  0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86,\n  0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e,\n  0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42,\n  0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16,\n]\nconst Si = [\n  0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81,\n  0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e,\n  0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23,\n  0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66,\n  0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72,\n  0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65,\n  0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46,\n  0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a,\n  0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca,\n  0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91,\n  0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6,\n  0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8,\n  0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f,\n  0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2,\n  0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8,\n  0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,\n  0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93,\n  0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb,\n  0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6,\n  0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d,\n]\n\n// Transformations for encryption\nconst T1 = [\n  0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd,\n  0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d,\n  0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d,\n  0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b,\n  0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7,\n  0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a,\n  0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4,\n  0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f,\n  0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1,\n  0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d,\n  0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e,\n  0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb,\n  0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e,\n  0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c,\n  0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46,\n  0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a,\n  0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7,\n  0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81,\n  0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe,\n  0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504,\n  0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a,\n  0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f,\n  0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2,\n  0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395,\n  0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e,\n  0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c,\n  0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256,\n  0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4,\n  0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4,\n  0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7,\n  0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa,\n  0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818,\n  0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1,\n  0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21,\n  0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42,\n  0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12,\n  0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158,\n  0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133,\n  0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22,\n  0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a,\n  0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631,\n  0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11,\n  0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a,\n]\nconst T2 = [\n  0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b,\n  0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b,\n  0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282,\n  0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0,\n  0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4,\n  0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626,\n  0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5,\n  0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515,\n  0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696,\n  0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2,\n  0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383,\n  0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0,\n  0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3,\n  0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded,\n  0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb,\n  0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf,\n  0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d,\n  0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f,\n  0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3,\n  0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5,\n  0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff,\n  0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec,\n  0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7,\n  0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373,\n  0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a,\n  0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414,\n  0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232,\n  0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c,\n  0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595,\n  0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d,\n  0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656,\n  0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808,\n  0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6,\n  0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f,\n  0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e,\n  0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e,\n  0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1,\n  0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111,\n  0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e,\n  0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf,\n  0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6,\n  0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f,\n  0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616,\n]\nconst T3 = [\n  0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b,\n  0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b,\n  0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82,\n  0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0,\n  0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4,\n  0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26,\n  0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5,\n  0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15,\n  0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796,\n  0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2,\n  0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83,\n  0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0,\n  0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3,\n  0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed,\n  0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb,\n  0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf,\n  0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d,\n  0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f,\n  0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3,\n  0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5,\n  0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff,\n  0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec,\n  0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7,\n  0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673,\n  0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a,\n  0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814,\n  0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432,\n  0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c,\n  0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195,\n  0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d,\n  0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56,\n  0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008,\n  0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6,\n  0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f,\n  0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e,\n  0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e,\n  0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1,\n  0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211,\n  0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e,\n  0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df,\n  0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6,\n  0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f,\n  0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16,\n]\nconst T4 = [\n  0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6,\n  0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56,\n  0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f,\n  0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb,\n  0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753,\n  0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c,\n  0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451,\n  0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a,\n  0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137,\n  0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf,\n  0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d,\n  0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b,\n  0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd,\n  0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1,\n  0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d,\n  0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85,\n  0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a,\n  0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe,\n  0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d,\n  0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1,\n  0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5,\n  0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3,\n  0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255,\n  0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6,\n  0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54,\n  0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28,\n  0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664,\n  0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8,\n  0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431,\n  0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da,\n  0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac,\n  0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810,\n  0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157,\n  0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e,\n  0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c,\n  0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c,\n  0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899,\n  0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322,\n  0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c,\n  0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5,\n  0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7,\n  0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e,\n  0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c,\n]\n\n// Transformations for decryption\nconst T5 = [\n  0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1,\n  0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25,\n  0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67,\n  0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6,\n  0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3,\n  0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd,\n  0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182,\n  0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94,\n  0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2,\n  0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5,\n  0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492,\n  0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a,\n  0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa,\n  0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46,\n  0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997,\n  0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb,\n  0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48,\n  0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927,\n  0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f,\n  0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16,\n  0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad,\n  0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd,\n  0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc,\n  0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120,\n  0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3,\n  0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422,\n  0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1,\n  0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4,\n  0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8,\n  0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3,\n  0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4,\n  0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6,\n  0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331,\n  0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815,\n  0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d,\n  0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f,\n  0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252,\n  0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89,\n  0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f,\n  0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86,\n  0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c,\n  0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190,\n  0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742,\n]\nconst T6 = [\n  0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45,\n  0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c,\n  0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b,\n  0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9,\n  0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421,\n  0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971,\n  0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31,\n  0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b,\n  0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02,\n  0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708,\n  0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4,\n  0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe,\n  0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef,\n  0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd,\n  0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9,\n  0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee,\n  0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed,\n  0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39,\n  0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7,\n  0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a,\n  0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7,\n  0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60,\n  0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6,\n  0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611,\n  0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230,\n  0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964,\n  0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1,\n  0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf,\n  0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8,\n  0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512,\n  0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918,\n  0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8,\n  0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23,\n  0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8,\n  0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0,\n  0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551,\n  0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2,\n  0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c,\n  0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273,\n  0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db,\n  0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225,\n  0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1,\n  0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857,\n]\nconst T7 = [\n  0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d,\n  0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502,\n  0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba,\n  0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3,\n  0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874,\n  0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9,\n  0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a,\n  0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908,\n  0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b,\n  0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337,\n  0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779,\n  0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6,\n  0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060,\n  0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6,\n  0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd,\n  0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8,\n  0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b,\n  0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d,\n  0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357,\n  0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12,\n  0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b,\n  0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f,\n  0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23,\n  0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6,\n  0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2,\n  0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9,\n  0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938,\n  0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad,\n  0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8,\n  0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25,\n  0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59,\n  0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15,\n  0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f,\n  0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7,\n  0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef,\n  0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665,\n  0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db,\n  0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13,\n  0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2,\n  0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844,\n  0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2,\n  0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456,\n  0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8,\n]\nconst T8 = [\n  0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f,\n  0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5,\n  0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725,\n  0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b,\n  0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358,\n  0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27,\n  0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5,\n  0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9,\n  0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272,\n  0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3,\n  0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7,\n  0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4,\n  0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40,\n  0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d,\n  0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6,\n  0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79,\n  0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832,\n  0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736,\n  0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93,\n  0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c,\n  0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2,\n  0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3,\n  0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb,\n  0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084,\n  0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc,\n  0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247,\n  0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9,\n  0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f,\n  0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890,\n  0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf,\n  0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e,\n  0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef,\n  0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a,\n  0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533,\n  0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43,\n  0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46,\n  0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292,\n  0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb,\n  0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55,\n  0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678,\n  0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc,\n  0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064,\n  0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0,\n]\n\n// Transformations for decryption key expansion\nconst U1 = [\n  0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927,\n  0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45,\n  0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb,\n  0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381,\n  0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf,\n  0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66,\n  0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28,\n  0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012,\n  0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec,\n  0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e,\n  0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd,\n  0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7,\n  0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89,\n  0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b,\n  0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815,\n  0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f,\n  0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa,\n  0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8,\n  0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36,\n  0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c,\n  0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742,\n  0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea,\n  0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4,\n  0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e,\n  0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360,\n  0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502,\n  0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87,\n  0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd,\n  0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3,\n  0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621,\n  0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f,\n  0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55,\n  0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26,\n  0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844,\n  0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba,\n  0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480,\n  0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce,\n  0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67,\n  0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929,\n  0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713,\n  0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed,\n  0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f,\n  0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3,\n]\nconst U2 = [\n  0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39,\n  0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f,\n  0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd,\n  0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3,\n  0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581,\n  0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac,\n  0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade,\n  0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0,\n  0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652,\n  0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814,\n  0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60,\n  0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e,\n  0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c,\n  0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa,\n  0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8,\n  0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6,\n  0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef,\n  0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9,\n  0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b,\n  0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225,\n  0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857,\n  0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd,\n  0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf,\n  0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91,\n  0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133,\n  0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75,\n  0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c,\n  0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842,\n  0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230,\n  0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6,\n  0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4,\n  0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa,\n  0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e,\n  0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8,\n  0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a,\n  0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544,\n  0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36,\n  0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b,\n  0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069,\n  0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647,\n  0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5,\n  0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3,\n  0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697,\n]\nconst U3 = [\n  0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d,\n  0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253,\n  0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99,\n  0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf,\n  0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5,\n  0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920,\n  0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a,\n  0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c,\n  0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86,\n  0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8,\n  0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f,\n  0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749,\n  0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13,\n  0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd,\n  0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7,\n  0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791,\n  0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060,\n  0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e,\n  0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4,\n  0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2,\n  0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8,\n  0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7,\n  0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad,\n  0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b,\n  0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751,\n  0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f,\n  0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de,\n  0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8,\n  0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2,\n  0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c,\n  0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406,\n  0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030,\n  0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7,\n  0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9,\n  0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203,\n  0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635,\n  0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f,\n  0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba,\n  0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0,\n  0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6,\n  0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c,\n  0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562,\n  0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46,\n]\nconst U4 = [\n  0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736,\n  0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562,\n  0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee,\n  0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca,\n  0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6,\n  0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9,\n  0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5,\n  0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281,\n  0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d,\n  0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59,\n  0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3,\n  0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787,\n  0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb,\n  0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f,\n  0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533,\n  0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17,\n  0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40,\n  0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814,\n  0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698,\n  0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc,\n  0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0,\n  0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53,\n  0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f,\n  0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b,\n  0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097,\n  0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3,\n  0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794,\n  0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0,\n  0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc,\n  0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168,\n  0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04,\n  0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520,\n  0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da,\n  0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e,\n  0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02,\n  0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026,\n  0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a,\n  0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725,\n  0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949,\n  0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d,\n  0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1,\n  0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5,\n  0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d,\n]\n\nfunction checkInt(value: number | string) {\n  return parseInt(`${value}`) === value\n}\n\nfunction checkInts(arrayish: Uint8Array) {\n  if (!checkInt(arrayish.length)) {\n    return false\n  }\n\n  for (let i = 0; i < arrayish.length; i++) {\n    if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction createArray(length: number) {\n  return new Uint8Array(length)\n}\n\nfunction convertToInt32(bytes: Uint8Array) {\n  const result = []\n  for (let i = 0; i < bytes.length; i += 4) {\n    result.push(\n      (bytes[i] << 24) |\n        (bytes[i + 1] << 16) |\n        (bytes[i + 2] << 8) |\n        bytes[i + 3]\n    )\n  }\n  return result\n}\n\nfunction coerceArray(arg: Uint8Array, copy?: boolean): Uint8Array {\n  // ArrayBuffer view\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore copy from https://github.com/ricmoo/aes-js/blob/master/index.js#L24\n  if (arg.buffer && arg.name === 'Uint8Array') {\n    if (copy) {\n      if (arg.slice) {\n        arg = arg.slice()\n      } else {\n        arg = Array.prototype.slice.call(arg)\n      }\n    }\n\n    return arg\n  }\n\n  // It's an array; check it is a valid representation of a byte\n  if (Array.isArray(arg)) {\n    if (!checkInts(arg)) {\n      throw new Error(`Array contains invalid value`)\n    }\n\n    return new Uint8Array(arg)\n  }\n\n  // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n  if (checkInt(arg.length) && checkInts(arg)) {\n    return new Uint8Array(arg)\n  }\n\n  throw new Error('unsupported array-like object')\n}\n\n// eslint-disable-next-line max-params\nfunction copyArray(\n  sourceArray: Uint8Array,\n  targetArray: Uint8Array,\n  targetStart: number,\n  sourceStart?: number,\n  sourceEnd?: number\n) {\n  if (sourceStart != null || sourceEnd != null) {\n    if (sourceArray.slice) {\n      sourceArray = sourceArray.slice(sourceStart, sourceEnd)\n    } else {\n      sourceArray = Array.prototype.slice.call(\n        sourceArray,\n        sourceStart,\n        sourceEnd\n      )\n    }\n  }\n  targetArray.set(sourceArray, targetStart)\n}\n\nclass AES {\n  private key: Uint8Array\n  private _Ke: number[][]\n  private _Kd: number[][]\n\n  constructor(key: Uint8Array) {\n    this.key = coerceArray(key, true)\n    this._prepare()\n  }\n\n  private _prepare() {\n    const rounds: number = numberOfRounds[this.key.length]\n    if (rounds == null) {\n      throw new Error('invalid key size (must be 16, 24 or 32 bytes)')\n    }\n\n    // encryption round keys\n    this._Ke = []\n\n    // decryption round keys\n    this._Kd = []\n\n    for (let i = 0; i <= rounds; i++) {\n      this._Ke.push([0, 0, 0, 0])\n      this._Kd.push([0, 0, 0, 0])\n    }\n\n    const roundKeyCount = (rounds + 1) * 4\n    const KC = this.key.length / 4\n\n    // convert the key into ints\n    const tk = convertToInt32(this.key)\n\n    // copy values into round key arrays\n    let index\n    for (let i = 0; i < KC; i++) {\n      index = i >> 2\n      this._Ke[index][i % 4] = tk[i]\n      this._Kd[rounds - index][i % 4] = tk[i]\n    }\n\n    // key expansion (fips-197 section 5.2)\n    let rconpointer = 0\n    let t = KC\n    let tt\n    while (t < roundKeyCount) {\n      tt = tk[KC - 1]\n      tk[0] ^=\n        (S[(tt >> 16) & 0xff] << 24) ^\n        (S[(tt >> 8) & 0xff] << 16) ^\n        (S[tt & 0xff] << 8) ^\n        S[(tt >> 24) & 0xff] ^\n        (rcon[rconpointer] << 24)\n      rconpointer += 1\n\n      // key expansion (for non-256 bit)\n      if (KC != 8) {\n        for (let i = 1; i < KC; i++) {\n          tk[i] ^= tk[i - 1]\n        }\n\n        // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n      } else {\n        for (let i = 1; i < KC / 2; i++) {\n          tk[i] ^= tk[i - 1]\n        }\n        tt = tk[KC / 2 - 1]\n\n        tk[KC / 2] ^=\n          S[tt & 0xff] ^\n          (S[(tt >> 8) & 0xff] << 8) ^\n          (S[(tt >> 16) & 0xff] << 16) ^\n          (S[(tt >> 24) & 0xff] << 24)\n\n        for (let i = KC / 2 + 1; i < KC; i++) {\n          tk[i] ^= tk[i - 1]\n        }\n      }\n\n      // copy values into round key arrays\n      let i = 0,\n        r,\n        c\n      while (i < KC && t < roundKeyCount) {\n        r = t >> 2\n        c = t % 4\n        this._Ke[r][c] = tk[i]\n        this._Kd[rounds - r][c] = tk[i++]\n        t++\n      }\n    }\n\n    // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n    for (let r = 1; r < rounds; r++) {\n      for (let c = 0; c < 4; c++) {\n        tt = this._Kd[r][c]\n        this._Kd[r][c] =\n          U1[(tt >> 24) & 0xff] ^\n          U2[(tt >> 16) & 0xff] ^\n          U3[(tt >> 8) & 0xff] ^\n          U4[tt & 0xff]\n      }\n    }\n  }\n\n  public encrypt(plaintext: Uint8Array) {\n    if (plaintext.length != 16) {\n      throw new Error('invalid plaintext size (must be 16 bytes)')\n    }\n\n    const rounds = this._Ke.length - 1\n    const a = [0, 0, 0, 0]\n\n    // convert plaintext to (ints ^ key)\n    let t = convertToInt32(plaintext)\n    for (let i = 0; i < 4; i++) {\n      t[i] ^= this._Ke[0][i]\n    }\n\n    // apply round transforms\n    for (let r = 1; r < rounds; r++) {\n      for (let i = 0; i < 4; i++) {\n        a[i] =\n          T1[(t[i] >> 24) & 0xff] ^\n          T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n          T3[(t[(i + 2) % 4] >> 8) & 0xff] ^\n          T4[t[(i + 3) % 4] & 0xff] ^\n          this._Ke[r][i]\n      }\n      t = a.slice()\n    }\n\n    // the last round is special\n    const result = createArray(16)\n    let tt\n    for (let i = 0; i < 4; i++) {\n      tt = this._Ke[rounds][i]\n      result[4 * i] = (S[(t[i] >> 24) & 0xff] ^ (tt >> 24)) & 0xff\n      result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff\n      result[4 * i + 2] = (S[(t[(i + 2) % 4] >> 8) & 0xff] ^ (tt >> 8)) & 0xff\n      result[4 * i + 3] = (S[t[(i + 3) % 4] & 0xff] ^ tt) & 0xff\n    }\n\n    return result\n  }\n\n  public decrypt(ciphertext: Uint8Array) {\n    if (ciphertext.length != 16) {\n      throw new Error('invalid ciphertext size (must be 16 bytes)')\n    }\n\n    const rounds = this._Kd.length - 1\n    const a = [0, 0, 0, 0]\n\n    // convert plaintext to (ints ^ key)\n    let t = convertToInt32(ciphertext)\n    for (let i = 0; i < 4; i++) {\n      t[i] ^= this._Kd[0][i]\n    }\n\n    // apply round transforms\n    for (let r = 1; r < rounds; r++) {\n      for (let i = 0; i < 4; i++) {\n        a[i] =\n          T5[(t[i] >> 24) & 0xff] ^\n          T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n          T7[(t[(i + 2) % 4] >> 8) & 0xff] ^\n          T8[t[(i + 1) % 4] & 0xff] ^\n          this._Kd[r][i]\n      }\n      t = a.slice()\n    }\n\n    // the last round is special\n    const result = createArray(16)\n    let tt\n    for (let i = 0; i < 4; i++) {\n      tt = this._Kd[rounds][i]\n      result[4 * i] = (Si[(t[i] >> 24) & 0xff] ^ (tt >> 24)) & 0xff\n      result[4 * i + 1] =\n        (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff\n      result[4 * i + 2] = (Si[(t[(i + 2) % 4] >> 8) & 0xff] ^ (tt >> 8)) & 0xff\n      result[4 * i + 3] = (Si[t[(i + 1) % 4] & 0xff] ^ tt) & 0xff\n    }\n\n    return result\n  }\n}\n\nexport class ModeOfOperationCBC {\n  private _aes: AES\n  private _lastCipherblock: Uint8Array\n\n  constructor(key: Uint8Array, iv: Uint8Array) {\n    if (!iv) {\n      iv = new Uint8Array(16)\n    } else if (iv.length != 16) {\n      throw new Error('invalid initialation vector size (must be 16 bytes)')\n    }\n\n    this._lastCipherblock = coerceArray(iv, true)\n    this._aes = new AES(key)\n  }\n\n  public encrypt(plaintext: Uint8Array) {\n    plaintext = coerceArray(plaintext)\n\n    if (plaintext.length % 16 !== 0) {\n      throw new Error('invalid plaintext size (must be multiple of 16 bytes)')\n    }\n\n    const ciphertext = createArray(plaintext.length)\n    const block = createArray(16)\n\n    for (let i = 0; i < plaintext.length; i += 16) {\n      copyArray(plaintext, block, 0, i, i + 16)\n\n      for (let j = 0; j < 16; j++) {\n        block[j] ^= this._lastCipherblock[j]\n      }\n\n      this._lastCipherblock = this._aes.encrypt(block)\n      copyArray(this._lastCipherblock, ciphertext, i)\n    }\n\n    return ciphertext\n  }\n\n  public decrypt(ciphertext: Uint8Array) {\n    ciphertext = coerceArray(ciphertext)\n\n    if (ciphertext.length % 16 !== 0) {\n      throw new Error('invalid ciphertext size (must be multiple of 16 bytes)')\n    }\n\n    const plaintext = createArray(ciphertext.length)\n    let block = createArray(16)\n\n    for (let i = 0; i < ciphertext.length; i += 16) {\n      copyArray(ciphertext, block, 0, i, i + 16)\n      block = this._aes.decrypt(block)\n\n      for (let j = 0; j < 16; j++) {\n        plaintext[i + j] = block[j] ^ this._lastCipherblock[j]\n      }\n\n      copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16)\n    }\n\n    return plaintext\n  }\n}\n","/*\n * pkcs7\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nconst PADDING: number[][] = [\n  [16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16],\n  [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15],\n  [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14],\n  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13],\n  [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12],\n  [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11],\n  [10, 10, 10, 10, 10, 10, 10, 10, 10, 10],\n  [9, 9, 9, 9, 9, 9, 9, 9, 9],\n  [8, 8, 8, 8, 8, 8, 8, 8],\n  [7, 7, 7, 7, 7, 7, 7],\n  [6, 6, 6, 6, 6, 6],\n  [5, 5, 5, 5, 5],\n  [4, 4, 4, 4],\n  [3, 3, 3],\n  [2, 2],\n  [1],\n]\n\nexport const pkcs7 = {\n  /**\n   * Returns a new Uint8Array that is padded with PKCS#7 padding.\n   *\n   * @param plaintext {Uint8Array} the input bytes before encryption\n   * @return {Uint8Array} the padded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n  pad(plaintext: Uint8Array): Uint8Array {\n    const padding = PADDING[plaintext.byteLength % 16 || 0]\n    const result = new Uint8Array(plaintext.byteLength + padding.length)\n\n    result.set(plaintext)\n    result.set(padding, plaintext.byteLength)\n\n    return result\n  },\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n  unpad(padded: Uint8Array): Uint8Array {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1])\n  },\n}\n","import {\n  EncryptionPayload,\n  JsonRpcRequest,\n  JsonRpcSuccess,\n  JsonRpcFailure,\n} from '@binance/w3w-types'\n\nimport {\n  arrayToBuffer,\n  hexToArray,\n  arrayToHex,\n  bufferToArray,\n  concatArrays,\n  utf8ToArray,\n  arrayToUtf8,\n  removeHexPrefix,\n  convertArrayBufferToBuffer,\n  convertBufferToArrayBuffer,\n} from '../encoding'\n\nimport * as lib from './lib'\n\nexport function generateKey(length?: number): ArrayBuffer {\n  const _length = (length || 256) / 8\n  const bytes = lib.randomBytes(_length)\n  const result = convertBufferToArrayBuffer(arrayToBuffer(bytes))\n\n  return result\n}\n\nfunction verifyHmac(payload: EncryptionPayload, key: Uint8Array): boolean {\n  const cipherText = hexToArray(payload.data)\n  const iv = hexToArray(payload.iv)\n  const hmac = hexToArray(payload.hmac)\n  const hmacHex: string = arrayToHex(hmac, false)\n  const unsigned = concatArrays(cipherText, iv)\n  const chmac = lib.hmacSha256Sign(key, unsigned)\n  const chmacHex: string = arrayToHex(chmac, false)\n\n  if (removeHexPrefix(hmacHex) === removeHexPrefix(chmacHex)) {\n    return true\n  }\n\n  return false\n}\n\nexport function encrypt(\n  data: JsonRpcRequest,\n  key: ArrayBuffer,\n  providedIv?: ArrayBuffer\n): EncryptionPayload {\n  const _key = bufferToArray(convertArrayBufferToBuffer(key))\n\n  const ivArrayBuffer: ArrayBuffer = providedIv || generateKey(128)\n  const iv = bufferToArray(convertArrayBufferToBuffer(ivArrayBuffer))\n  const ivHex: string = arrayToHex(iv, false)\n\n  const contentString: string = JSON.stringify(data)\n  const content = utf8ToArray(contentString)\n\n  const cipherText = lib.aesCbcEncrypt(iv, _key, content)\n  const cipherTextHex: string = arrayToHex(cipherText, false)\n\n  const unsigned = concatArrays(cipherText, iv)\n  const hmac = lib.hmacSha256Sign(_key, unsigned)\n  const hmacHex: string = arrayToHex(hmac, false)\n\n  return {\n    data: cipherTextHex,\n    hmac: hmacHex,\n    iv: ivHex,\n  }\n}\n\nexport function decrypt(\n  payload: EncryptionPayload,\n  key: ArrayBuffer\n): JsonRpcRequest | JsonRpcSuccess | JsonRpcFailure | null {\n  const _key = bufferToArray(convertArrayBufferToBuffer(key))\n\n  if (!_key) {\n    throw new Error('Missing key: required for decryption')\n  }\n\n  const verified: boolean = verifyHmac(payload, _key)\n  if (!verified) {\n    return null\n  }\n\n  const cipherText = hexToArray(payload.data)\n  const iv = hexToArray(payload.iv)\n  const buffer = lib.aesCbcDecrypt(iv, _key, cipherText)\n  const utf8: string = arrayToUtf8(buffer)\n  let data\n  try {\n    data = JSON.parse(utf8)\n  } catch (error) {\n    return null\n  }\n\n  return data\n}\n","export function getStorage<T>(key: string): T | null {\n  let data: T | null = null\n  try {\n    const rawData = window.localStorage.getItem(key)\n    if (rawData) {\n      data = JSON.parse(rawData)\n    }\n  } catch (error) {\n    data = null\n  }\n  return data\n}\n\nexport function removeStorage(key: string) {\n  try {\n    window.localStorage.removeItem(key)\n  } catch (error) {\n    // ignore error\n  }\n}\n\nexport function setStorage<T>(key: string, data: T) {\n  try {\n    window.localStorage.setItem(key, JSON.stringify(data))\n  } catch (error) {\n    // ignore error\n  }\n}\n","import { IEvents, Any } from '@binance/w3w-types'\nimport EventEmitter from 'eventemitter3'\n\nexport class Events implements IEvents {\n  public events: EventEmitter = new EventEmitter()\n\n  public on = (name: string, listener: (...args: Any[]) => void) => {\n    return this.events.on(name, listener)\n  }\n\n  public once = (name: string, listener: (...args: Any[]) => void) => {\n    return this.events.once(name, listener)\n  }\n\n  public off = (name: string, listener: (...args: Any[]) => void) => {\n    return this.events.off(name, listener)\n  }\n\n  public removeListener = (\n    name: string,\n    listener?: (...args: Any[]) => void\n  ) => {\n    return this.events.removeListener(name, listener)\n  }\n  public removeAllListeners = () => {\n    return this.events.removeAllListeners()\n  }\n}\n","import { ILog, LogData } from '@binance/w3w-types'\n\nconst logLevels = {\n  ERROR: 0,\n  WARN: 1,\n  INFO: 2,\n  DEBUG: 3,\n}\n\nconst currentLogLevel = logLevels.DEBUG // Set the desired log level here\n\nexport const log: ILog = {\n  error: function (...args: LogData) {\n    if (currentLogLevel >= logLevels.ERROR) {\n      console.error('[ERROR]', ...args)\n    }\n  },\n  warn: function (...args: LogData) {\n    if (currentLogLevel >= logLevels.WARN) {\n      console.warn('[WARN]', ...args)\n    }\n  },\n  info: function (...args: LogData) {\n    if (currentLogLevel >= logLevels.INFO) {\n      console.info('[INFO]', ...args)\n    }\n  },\n  debug: function (...args: LogData) {\n    if (currentLogLevel >= logLevels.DEBUG) {\n      console.log('[DEBUG]', ...args)\n    }\n  },\n}\n","import { ClientMetadata } from '@binance/w3w-types'\n\nconst isInBrowser: boolean = typeof window !== 'undefined'\n\nfunction getIcons(): string[] {\n  const links: HTMLCollectionOf<HTMLLinkElement> =\n    document.getElementsByTagName('link')\n  const icons: string[] = []\n\n  for (let i = 0; i < links.length; i++) {\n    const link: HTMLLinkElement = links[i]\n\n    const rel: string | null = link.getAttribute('rel')\n    if (rel) {\n      if (rel.toLowerCase().indexOf('icon') > -1) {\n        const href: string | null = link.getAttribute('href')\n\n        if (href) {\n          if (\n            href.toLowerCase().indexOf('https:') === -1 &&\n            href.toLowerCase().indexOf('http:') === -1 &&\n            href.indexOf('//') !== 0\n          ) {\n            let absoluteHref: string = location.protocol + '//' + location.host\n\n            if (href.indexOf('/') === 0) {\n              absoluteHref += href\n            } else {\n              const path: string[] = location.pathname.split('/')\n              path.pop()\n              const finalPath: string = path.join('/')\n              absoluteHref += finalPath + '/' + href\n            }\n\n            icons.push(absoluteHref)\n          } else if (href.indexOf('//') === 0) {\n            const absoluteUrl: string = location.protocol + href\n\n            icons.push(absoluteUrl)\n          } else {\n            icons.push(href)\n          }\n        }\n      }\n    }\n  }\n\n  return icons\n}\n\nfunction getWindowMetadataOfAny(...args: string[]): string {\n  const metaTags: HTMLCollectionOf<HTMLMetaElement> =\n    document.getElementsByTagName('meta')\n\n  for (let i = 0; i < metaTags.length; i++) {\n    const tag: HTMLMetaElement = metaTags[i]\n    const attributes: Array<string | null> = ['itemprop', 'property', 'name']\n      .map((target: string) => tag.getAttribute(target))\n      .filter((attr: string | null) => {\n        if (attr) {\n          return args.includes(attr)\n        }\n        return false\n      })\n\n    if (attributes.length && attributes) {\n      const content: string | null = tag.getAttribute('content')\n      if (content) {\n        return content\n      }\n    }\n  }\n\n  return ''\n}\n\nfunction getName(): string {\n  let name: string = getWindowMetadataOfAny(\n    'name',\n    'og:site_name',\n    'og:title',\n    'twitter:title'\n  )\n\n  if (!name) {\n    name = document.title\n  }\n\n  return name\n}\n\nfunction getDescription(): string {\n  const description: string = getWindowMetadataOfAny(\n    'description',\n    'og:description',\n    'twitter:description',\n    'keywords'\n  )\n\n  return description\n}\n\nexport function getClientMetadata(): ClientMetadata | null {\n  if (!isInBrowser) return\n\n  const name: string = getName()\n  const description: string = getDescription()\n  const url: string = location.origin\n  const icons: string[] = getIcons()\n\n  const meta: ClientMetadata = {\n    description,\n    url,\n    icons,\n    name,\n  }\n\n  return meta\n}\n","export class ProviderRpcError extends Error {\n  code: number // https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n\n  constructor(code: number, message: string) {\n    super(message) // 'Error' breaks prototype chain here\n    this.code = code\n\n    /**\n     * ref:\n     * https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n     * https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget\n     */\n    Object.setPrototypeOf(this, new.target.prototype) // restore prototype chain\n  }\n\n  public toString(): string {\n    return `${this.message} (${this.code})`\n  }\n}\n","export const CONNECTION_ERR = {\n  CLOSE_MODAL: {\n    code: 100001,\n    message: '[binance-w3w] User closed modal',\n  },\n  REJECT_SESSION: {\n    code: 100002,\n    message: '[binance-w3w] User rejected connection',\n  },\n  PROVIDER_NOT_READY: {\n    code: 100003,\n    message: '[binance-w3w] Provider is not ready',\n  },\n  CONNECTING: {\n    code: 100004,\n    message: '[binance-w3w] Already processing session request. Please wait',\n  },\n  CONNECTED: {\n    code: 100005,\n    message: '[binance-w3w] Already connected',\n  },\n}\n\nexport const RPC_ERROR = {\n  REJECT_ERR: {\n    code: 200001,\n    message: '[binance-w3w] User rejected the operation',\n  },\n  METHOD_NOT_SUPPORT: {\n    code: 200002,\n    message: '[binance-w3w] Does not support calling method',\n  },\n  MISSING_RESPONSE: {\n    code: 200003,\n    message: '[binance-w3w] Missing JSON RPC response',\n  },\n  INVALID_PARAM: {\n    code: 200004,\n    message: '[binance-w3w] Invalid request param',\n  },\n}\n\nexport const MISC_ERR = {\n  INTERNAL_ERR: {\n    code: 300001,\n    message: '[binance-w3w] Internal error',\n  },\n}\n","import { encodeURI } from 'js-base64'\n\nimport { getStorage, setStorage } from '../storage'\n\nexport const getIsMobile = () => {\n  const ua = typeof window.navigator === 'undefined' ? '' : navigator.userAgent\n  const mobile = Boolean(\n    ua.match(\n      /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i\n    )\n  )\n  return mobile\n}\n\nexport const getIsAndroid = () => {\n  const ua = navigator.userAgent\n  const android = Boolean(ua.match(/Android/i))\n  return android\n}\n\nexport const getHref = (isAndroid: boolean, wc?: string) => {\n  const appID = 'xoqXxUSMRccLCrZNRebmzj'\n  const startPagePath = 'L3BhZ2VzL2Rhc2hib2FyZC1uZXcvaW5kZXg='\n\n  let qs = `appId=${appID}&startPagePath=${startPagePath}`\n  if (wc) {\n    const startPageQuery = encodeURI(\n      `wc=${encodeURIComponent(wc)}&isDeepLink=true&id=${+new Date()}`\n    )\n    qs = `${qs}&startPageQuery=${startPageQuery}`\n  }\n  const host = '//app.binance.com'\n  if (isAndroid) {\n    return `bnc:${host}/mp/app?${qs}`\n  }\n  return `https:${host}/?_dp=${encodeURI(`/mp/app?${qs}`)}`\n}\n\nexport const openBinanceDeepLink = (wc?: string) => {\n  const isMobile = getIsMobile()\n  const href = getHref(true, wc)\n  if (!isMobile) return\n\n  const a = document.createElement('a')\n  a.href = href\n  document.body.appendChild(a)\n  a.click()\n  document.body.removeChild(a)\n}\n","export const isInBinance = () => {\n  try {\n    return (window as any)?.ethereum?.isBinance === true\n  } catch (error) {\n    return false\n  }\n}\n","import { isInBinance } from './env'\n\ndeclare global {\n  interface Window {\n    ethereum: any\n  }\n}\n\nexport const bnTransport = ({ custom, http }) => {\n  if (isInBinance()) {\n    return custom({\n      async request({ method, params }) {\n        console.log('🚀 ~~ request ~~ method:', method)\n        try {\n          const response = await window.ethereum.request({ method, params })\n          console.log('🚀 ~~ custom ~~ response:', response)\n          return response\n        } catch (error) {\n          console.log('🚀 ~~ request ~~ error:', error)\n        }\n      },\n    })\n  }\n  return http()\n}\n"]}