import { QrcodeModal } from '@binance/w3w-types'
import { isNode } from '@binance/w3w-utils'

import * as browserLib from './browser'

// eslint-disable-next-line @typescript-eslint/no-unused-vars
let resolve = (value: string) => {}
let reject = () => {}

function open({ cb, lng }: { cb: () => void; lng?: string }) {
  const isReady: Promise<string> = new Promise((res, rej) => {
    resolve = res
    reject = rej
  })
  if (!isNode()) {
    browserLib.open({ isReady, cb, lng })
  }
}

function close() {
  if (!isNode()) {
    browserLib.close()
  }
}

function ready(uri: string) {
  resolve(uri)
}

// TODO need a good name
function fail() {
  console.log('relay failed....')
  reject()
}

const modal: QrcodeModal = { open, close, ready, fail }

export default modal
