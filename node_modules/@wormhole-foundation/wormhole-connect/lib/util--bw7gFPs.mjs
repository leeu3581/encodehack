var r = function(i, e, a, t) {
  if (a === "a" && !t) throw new TypeError("Private accessor was defined without a getter");
  if (typeof e == "function" ? i !== e || !t : !e.has(i)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return a === "m" ? t : a === "a" ? t.call(i) : t ? t.value : e.get(i);
}, s = function(i, e, a, t, n) {
  if (t === "m") throw new TypeError("Private method is not writable");
  if (t === "a" && !n) throw new TypeError("Private accessor was defined without a setter");
  if (typeof e == "function" ? i !== e || !n : !e.has(i)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return t === "a" ? n.call(i, a) : n ? n.value = a : e.set(i, a), a;
}, l, o, d, c, h, f;
class u {
  /** Implementation of {@link "@wallet-standard/base".WalletAccount.address | WalletAccount::address} */
  get address() {
    return r(this, l, "f");
  }
  /** Implementation of {@link "@wallet-standard/base".WalletAccount.publicKey | WalletAccount::publicKey} */
  get publicKey() {
    return r(this, o, "f").slice();
  }
  /** Implementation of {@link "@wallet-standard/base".WalletAccount.chains | WalletAccount::chains} */
  get chains() {
    return r(this, d, "f").slice();
  }
  /** Implementation of {@link "@wallet-standard/base".WalletAccount.features | WalletAccount::features} */
  get features() {
    return r(this, c, "f").slice();
  }
  /** Implementation of {@link "@wallet-standard/base".WalletAccount.label | WalletAccount::label} */
  get label() {
    return r(this, h, "f");
  }
  /** Implementation of {@link "@wallet-standard/base".WalletAccount.icon | WalletAccount::icon} */
  get icon() {
    return r(this, f, "f");
  }
  /**
   * Create and freeze a read-only account.
   *
   * @param account Account to copy properties from.
   */
  constructor(e) {
    l.set(this, void 0), o.set(this, void 0), d.set(this, void 0), c.set(this, void 0), h.set(this, void 0), f.set(this, void 0), new.target === u && Object.freeze(this), s(this, l, e.address, "f"), s(this, o, e.publicKey.slice(), "f"), s(this, d, e.chains.slice(), "f"), s(this, c, e.features.slice(), "f"), s(this, h, e.label, "f"), s(this, f, e.icon, "f");
  }
}
l = /* @__PURE__ */ new WeakMap(), o = /* @__PURE__ */ new WeakMap(), d = /* @__PURE__ */ new WeakMap(), c = /* @__PURE__ */ new WeakMap(), h = /* @__PURE__ */ new WeakMap(), f = /* @__PURE__ */ new WeakMap();
function w(i, e) {
  if (i === e)
    return !0;
  const a = i.length;
  if (a !== e.length)
    return !1;
  for (let t = 0; t < a; t++)
    if (i[t] !== e[t])
      return !1;
  return !0;
}
export {
  u as R,
  w as a
};
