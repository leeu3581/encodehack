import { IdlAccounts, Program } from "@coral-xyz/anchor";
import { Connection } from "@solana/web3.js";
import { _1_0_0, _2_0_0, _3_0_0 } from "./anchor-idl/index.js";
export interface IdlBinding<V extends IdlVersion> {
    idl: {
        ntt: NttBindings.NativeTokenTransfer<V>;
        transceiver: NttBindings.Transceiver<V>;
        quoter: NttBindings.Quoter<V>;
    };
}
export declare const IdlVersions: readonly [readonly ["3.0.0", typeof _3_0_0], readonly ["2.0.0", typeof _2_0_0], readonly ["1.0.0", typeof _1_0_0]];
export type IdlVersion = (typeof IdlVersions)[number][0];
export declare namespace NttBindings {
    export type NativeTokenTransfer<V extends IdlVersion> = V extends "1.0.0" ? _1_0_0.RawExampleNativeTokenTransfers : V extends "2.0.0" ? _2_0_0.RawExampleNativeTokenTransfers : _3_0_0.RawExampleNativeTokenTransfers;
    export type Quoter<V extends IdlVersion> = V extends "1.0.0" ? _1_0_0.RawNttQuoter : V extends "2.0.0" ? _2_0_0.RawNttQuoter : _3_0_0.RawNttQuoter;
    export type Transceiver<V extends IdlVersion> = V extends "1.0.0" ? _1_0_0.RawExampleNativeTokenTransfers : V extends "2.0.0" ? _2_0_0.RawExampleNativeTokenTransfers : _3_0_0.RawNttTransceiver;
    type ProgramAccounts<V extends IdlVersion> = IdlAccounts<NttBindings.NativeTokenTransfer<V>>;
    export type Config<V extends IdlVersion> = ProgramAccounts<V>["config"];
    export type InboxItem<V extends IdlVersion> = ProgramAccounts<V>["inboxItem"];
    export {};
}
export declare function getNttProgram<V extends IdlVersion>(connection: Connection, address: string, version: V): Program<NttBindings.NativeTokenTransfer<V>>;
export declare function getTransceiverProgram<V extends IdlVersion>(connection: Connection, address: string, version: V): Program<NttBindings.Transceiver<V>>;
export declare function getQuoterProgram<V extends IdlVersion>(connection: Connection, address: string, version: V): Program<NttBindings.Quoter<V>>;
//# sourceMappingURL=bindings.d.ts.map