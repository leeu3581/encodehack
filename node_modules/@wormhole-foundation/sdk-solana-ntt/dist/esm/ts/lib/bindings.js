import { Program } from "@coral-xyz/anchor";
import { _1_0_0, _2_0_0, _3_0_0 } from "./anchor-idl/index.js";
import { Ntt } from "@wormhole-foundation/sdk-definitions-ntt";
// This is a descending list of all ABI versions the SDK is aware of.
// We check for the first match in descending order, allowing for higher minor and patch versions
// being used by the live contract (these are supposed to still be compatible with older ABIs).
export const IdlVersions = [
    ["3.0.0", _3_0_0],
    ["2.0.0", _2_0_0],
    ["1.0.0", _1_0_0],
];
function loadIdlVersion(targetVersion) {
    for (const [idlVersion, idl] of IdlVersions) {
        if (Ntt.abiVersionMatches(targetVersion, idlVersion)) {
            return idl;
        }
    }
    throw new Error(`Unknown IDL version: ${targetVersion}`);
}
export function getNttProgram(connection, address, version) {
    const { idl: { ntt }, } = loadIdlVersion(version);
    return new Program(ntt, address, {
        connection,
    });
}
export function getTransceiverProgram(connection, address, version) {
    const { idl: { transceiver }, } = loadIdlVersion(version);
    return new Program(transceiver, address, {
        connection,
    });
}
export function getQuoterProgram(connection, address, version) {
    const { idl: { quoter }, } = loadIdlVersion(version);
    return new Program(quoter, address, {
        connection,
    });
}
//# sourceMappingURL=bindings.js.map