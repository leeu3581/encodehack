"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.nttNamedPayloads = void 0;
const sdk_definitions_1 = require("@wormhole-foundation/sdk-definitions");
const manager_js_1 = require("./manager.js");
const transceiver_js_1 = require("./transceiver.js");
const transfer_js_1 = require("./transfer.js");
const wormhole_js_1 = require("./wormhole.js");
exports.nttNamedPayloads = [
    [
        "WormholeTransfer",
        (0, wormhole_js_1.wormholeTransceiverMessageLayout)((0, manager_js_1.nttManagerMessageLayout)(transfer_js_1.nativeTokenTransferLayout)),
    ],
    [
        "WormholeTransferStandardRelayer",
        (0, sdk_definitions_1.deliveryInstructionLayout)((0, wormhole_js_1.wormholeTransceiverMessageLayout)((0, manager_js_1.nttManagerMessageLayout)(transfer_js_1.nativeTokenTransferLayout))),
    ],
    ["TransceiverInfo", transceiver_js_1.transceiverInfo],
    ["TransceiverRegistration", transceiver_js_1.transceiverRegistration],
];
__exportStar(require("./amount.js"), exports);
__exportStar(require("./manager.js"), exports);
__exportStar(require("./prefix.js"), exports);
__exportStar(require("./transceiver.js"), exports);
__exportStar(require("./transceiverInstructions.js"), exports);
__exportStar(require("./transfer.js"), exports);
__exportStar(require("./wormhole.js"), exports);
//# sourceMappingURL=index.js.map