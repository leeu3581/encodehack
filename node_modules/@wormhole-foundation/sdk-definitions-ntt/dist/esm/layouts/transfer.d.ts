import { LayoutToType } from "@wormhole-foundation/sdk-base";
export declare function serializeNum(val: number, size: number): Uint8Array;
export type NativeTokenTransfer = LayoutToType<typeof nativeTokenTransferLayout>;
/** Describes binary layout for a native token transfer payload */
export declare const nativeTokenTransferLayout: readonly [{
    readonly name: "prefix";
    readonly binary: "bytes";
    readonly custom: Uint8Array;
    readonly omit: true;
}, {
    readonly binary: "bytes";
    readonly layout: readonly [{
        readonly name: "decimals";
        readonly binary: "uint";
        readonly size: 1;
    }, {
        readonly name: "amount";
        readonly binary: "uint";
        readonly size: 8;
    }];
    readonly name: "trimmedAmount";
}, {
    readonly binary: "bytes";
    readonly size: 32;
    readonly custom: {
        to: (val: Uint8Array) => import("@wormhole-foundation/sdk-definitions").UniversalAddress;
        from: (val: import("@wormhole-foundation/sdk-definitions").UniversalAddress) => Uint8Array;
    };
    readonly name: "sourceToken";
}, {
    readonly binary: "bytes";
    readonly size: 32;
    readonly custom: {
        to: (val: Uint8Array) => import("@wormhole-foundation/sdk-definitions").UniversalAddress;
        from: (val: import("@wormhole-foundation/sdk-definitions").UniversalAddress) => Uint8Array;
    };
    readonly name: "recipientAddress";
}, {
    readonly custom: {
        to: (val: number) => "Solana" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Algorand" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Near" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Sui" | "Aptos" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Btc" | "Base" | "Sei" | "Rootstock" | "Scroll" | "Mantle" | "Blast" | "Xlayer" | "Linea" | "Berachain" | "Seievm" | "Snaxchain" | "Unichain" | "Worldchain" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Neutron" | "Celestia" | "Stargaze" | "Seda" | "Dymension" | "Provenance" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky" | "PolygonSepolia" | "MonadDevnet";
        from: (val: "Solana" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Algorand" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Near" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Sui" | "Aptos" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Btc" | "Base" | "Sei" | "Rootstock" | "Scroll" | "Mantle" | "Blast" | "Xlayer" | "Linea" | "Berachain" | "Seievm" | "Snaxchain" | "Unichain" | "Worldchain" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Neutron" | "Celestia" | "Stargaze" | "Seda" | "Dymension" | "Provenance" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky" | "PolygonSepolia" | "MonadDevnet") => number;
    };
    readonly binary: "uint";
    readonly size: 2;
    readonly name: "recipientChain";
}, {
    readonly binary: "bytes";
    readonly custom: {
        to: (val: Uint8Array) => Uint8Array;
        from: (val: Uint8Array) => Uint8Array;
    };
    readonly name: "additionalPayload";
}];
//# sourceMappingURL=transfer.d.ts.map