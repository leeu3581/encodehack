import { CustomizableBytes, LayoutToType } from "@wormhole-foundation/sdk-base";
export type NttManagerMessage<P extends CustomizableBytes = undefined> = LayoutToType<ReturnType<typeof nttManagerMessageLayout<P>>>;
export declare const nttManagerMessageLayout: <const P extends CustomizableBytes = undefined>(customPayload?: P) => readonly [{
    readonly name: "id";
    readonly binary: "bytes";
    readonly size: 32;
}, {
    readonly binary: "bytes";
    readonly size: 32;
    readonly custom: {
        to: (val: Uint8Array) => import("@wormhole-foundation/sdk-definitions").UniversalAddress;
        from: (val: import("@wormhole-foundation/sdk-definitions").UniversalAddress) => Uint8Array;
    };
    readonly name: "sender";
}, import("@wormhole-foundation/sdk-base").CustomizableBytesReturn<{
    readonly name: "payload";
    readonly lengthSize: 2;
}, P>];
//# sourceMappingURL=manager.d.ts.map