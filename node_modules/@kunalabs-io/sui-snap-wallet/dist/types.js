"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/types.ts
var types_exports = {};
__export(types_exports, {
  SerializedAdminSetFullnodeUrl: () => SerializedAdminSetFullnodeUrl,
  SerializedSuiSignAndExecuteTransactionBlockInput: () => SerializedSuiSignAndExecuteTransactionBlockInput,
  SerializedSuiSignPersonalMessageInput: () => SerializedSuiSignPersonalMessageInput,
  SerializedSuiSignTransactionBlockInput: () => SerializedSuiSignTransactionBlockInput,
  SerializedWalletAccount: () => SerializedWalletAccount,
  deserializeSuiSignAndExecuteTransactionBlockInput: () => deserializeSuiSignAndExecuteTransactionBlockInput,
  deserializeSuiSignMessageInput: () => deserializeSuiSignMessageInput,
  deserializeSuiSignTransactionBlockInput: () => deserializeSuiSignTransactionBlockInput,
  deserializeWalletAccount: () => deserializeWalletAccount,
  is: () => import_superstruct2.is,
  serializeSuiSignAndExecuteTransactionBlockInput: () => serializeSuiSignAndExecuteTransactionBlockInput,
  serializeSuiSignMessageInput: () => serializeSuiSignMessageInput,
  serializeSuiSignTransactionBlockInput: () => serializeSuiSignTransactionBlockInput,
  serializeWalletAccount: () => serializeWalletAccount,
  validate: () => import_superstruct2.validate
});
module.exports = __toCommonJS(types_exports);
var import_transactions = require("@mysten/sui.js/transactions");
var import_utils = require("@mysten/sui.js/utils");
var import_superstruct = require("superstruct");
var import_superstruct2 = require("superstruct");
var SerializedWalletAccount = (0, import_superstruct.object)({
  address: (0, import_superstruct.string)(),
  publicKey: (0, import_superstruct.string)(),
  chains: (0, import_superstruct.array)((0, import_superstruct.string)()),
  features: (0, import_superstruct.array)((0, import_superstruct.string)()),
  label: (0, import_superstruct.optional)((0, import_superstruct.string)()),
  icon: (0, import_superstruct.optional)((0, import_superstruct.string)())
});
function serializeWalletAccount(account) {
  return {
    address: account.address,
    publicKey: (0, import_utils.toB64)(account.publicKey),
    features: [...account.features],
    chains: [...account.chains],
    label: account.label,
    icon: account.icon
  };
}
function deserializeWalletAccount(account) {
  return {
    address: account.address,
    publicKey: (0, import_utils.fromB64)(account.publicKey),
    chains: account.chains.map((chain) => chain),
    features: account.features.map((feature) => feature),
    label: account.label,
    icon: account.icon
  };
}
var SerializedSuiSignPersonalMessageInput = (0, import_superstruct.object)({
  message: (0, import_superstruct.string)(),
  account: SerializedWalletAccount
});
function serializeSuiSignMessageInput(input) {
  return {
    message: (0, import_utils.toB64)(input.message),
    account: serializeWalletAccount(input.account)
  };
}
function deserializeSuiSignMessageInput(input) {
  return {
    message: (0, import_utils.fromB64)(input.message),
    account: deserializeWalletAccount(input.account)
  };
}
var SerializedSuiSignTransactionBlockInput = (0, import_superstruct.object)({
  transactionBlock: (0, import_superstruct.string)(),
  account: SerializedWalletAccount,
  chain: (0, import_superstruct.string)()
});
function serializeSuiSignTransactionBlockInput(input) {
  return {
    transactionBlock: input.transactionBlock.serialize(),
    account: serializeWalletAccount(input.account),
    chain: input.chain
  };
}
function deserializeSuiSignTransactionBlockInput(input) {
  return {
    transactionBlock: import_transactions.TransactionBlock.from(input.transactionBlock),
    account: deserializeWalletAccount(input.account),
    chain: input.chain
  };
}
var SuiTransactionBlockResponseOptions = (0, import_superstruct.object)({
  showBalanceChanges: (0, import_superstruct.optional)((0, import_superstruct.boolean)()),
  showEffects: (0, import_superstruct.optional)((0, import_superstruct.boolean)()),
  showEvents: (0, import_superstruct.optional)((0, import_superstruct.boolean)()),
  showInput: (0, import_superstruct.optional)((0, import_superstruct.boolean)()),
  showObjectChanges: (0, import_superstruct.optional)((0, import_superstruct.boolean)()),
  showRawInput: (0, import_superstruct.optional)((0, import_superstruct.boolean)())
});
var SerializedSuiSignAndExecuteTransactionBlockInput = (0, import_superstruct.object)({
  transactionBlock: (0, import_superstruct.string)(),
  account: SerializedWalletAccount,
  chain: (0, import_superstruct.string)(),
  requestType: (0, import_superstruct.optional)((0, import_superstruct.string)()),
  options: (0, import_superstruct.optional)(SuiTransactionBlockResponseOptions)
});
function serializeSuiSignAndExecuteTransactionBlockInput(input) {
  return {
    transactionBlock: input.transactionBlock.serialize(),
    account: serializeWalletAccount(input.account),
    chain: input.chain,
    requestType: input.requestType,
    options: input.options
  };
}
function deserializeSuiSignAndExecuteTransactionBlockInput(input) {
  return {
    ...input,
    transactionBlock: import_transactions.TransactionBlock.from(input.transactionBlock),
    account: deserializeWalletAccount(input.account),
    chain: input.chain,
    requestType: input.requestType
  };
}
var SerializedAdminSetFullnodeUrl = (0, import_superstruct.object)({
  network: (0, import_superstruct.union)([(0, import_superstruct.literal)("mainnet"), (0, import_superstruct.literal)("testnet"), (0, import_superstruct.literal)("devnet"), (0, import_superstruct.literal)("localnet")]),
  url: (0, import_superstruct.string)()
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SerializedAdminSetFullnodeUrl,
  SerializedSuiSignAndExecuteTransactionBlockInput,
  SerializedSuiSignPersonalMessageInput,
  SerializedSuiSignTransactionBlockInput,
  SerializedWalletAccount,
  deserializeSuiSignAndExecuteTransactionBlockInput,
  deserializeSuiSignMessageInput,
  deserializeSuiSignTransactionBlockInput,
  deserializeWalletAccount,
  is,
  serializeSuiSignAndExecuteTransactionBlockInput,
  serializeSuiSignMessageInput,
  serializeSuiSignTransactionBlockInput,
  serializeWalletAccount,
  validate
});
//# sourceMappingURL=types.js.map